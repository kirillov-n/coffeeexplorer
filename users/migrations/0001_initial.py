# Generated by Django 5.0.1 on 2024-01-11 19:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('coffeeexplorer_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('userID', models.BigAutoField(primary_key=True, serialize=False, unique=True, verbose_name='Id пользователя')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email адрес')),
                ('nickname', models.CharField(verbose_name='Никнейм')),
                ('sex', models.CharField(choices=[('M', 'Man'), ('W', 'Woman')], verbose_name='Пол')),
                ('birthdate', models.DateField(verbose_name='Дата рождения')),
                ('occupation', models.CharField(choices=[('RS', 'Remote student'), ('NRS', 'Not remote student'), ('RW', 'Remote worker'), ('NRW', 'Not remote worker'), ('OAR', 'On a rest')], verbose_name='Занятость')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('is_business', models.BooleanField(default=False, verbose_name='Бизнес аккаунт')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('favourites', models.ManyToManyField(to='coffeeexplorer_app.establishments', verbose_name='Избранное')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('PostID', models.AutoField(primary_key=True, serialize=False, verbose_name='ID поста')),
                ('picture', models.ImageField(upload_to='uploads/', verbose_name='Изображение')),
                ('rating', models.FloatField(verbose_name='Рейтинг')),
                ('body', models.TextField(max_length=200, verbose_name='Текст')),
                ('time_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_edited', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffeeexplorer_app.establishments', verbose_name='Заведение')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('commentID', models.AutoField(primary_key=True, serialize=False, verbose_name='ID комментария')),
                ('body', models.TextField(max_length=200, verbose_name='Текст')),
                ('time_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_edited', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.posts', verbose_name='Пост')),
            ],
        ),
    ]
